h1. Sparkfly Foreigner

sparkfly-foreigner is a fork of "Matt Higgins Foreigner":http://github.com/matthuhiggins/foreigner/ and the "dwilkie-foreigner":http://github.com/dwilkie/foreigner

Sparkfly requires an enterprise-ready Rails environment, which means we need solid PostgreSQL support and referential integrity.
Further, all of our plugins must be thoroughly tested. To make sure that PostgreSQL support is where we want it to be, the work
done by Matt Higgins and D. Wilkie were forked and all the tests were converted to use rspec. Dependency on plugin_test_helper
was taken out. 

These tests were created and tested against our target platform, Rails 2.3.5. Support for Rails 3 will come in the future
when we actually move our platform to Rails 3.

PostgreSQL (tested against 8.3.9)
 - "Schema" tests: do the table migrations actually add referential integrity?
 - "Semantics" tests: do the add/drop constraints emit proper SQL?

MySQL (tested against 5.0.90 / Gentoo mysql-5.0.90-r2 hardened x86_64)
 - "Schema" tests: do the table migrations actually add referential integrity?
 - "Semantics" tests: do the add/drop constraints emit proper SQL?

SQLite3 (tested against 3.6.22 in-memory only)
 - "Semantics" tests: do the add/drop constraints emit proper SQL?

TODO:
 - Schema Dumper rspec
 - CHECK Constraints (PostgreSQL-only)
 - CHECK Constraints implemented as triggers for MySQL. This is unlikely to be supported since we don't plan to deploy to MySQL

h2. Usage 

To specify a different column name you can do the following:
<pre>
  create_table :comments do |t|
    t.integer :article_id, :null => false
    t.foreign_key :post, :column => :article_id
  end
</pre>

To specify dependencies (nullify or delete) you can do the following:
<pre>
  create_table :comments do |t|
    t.references :post, :foreign_key => {:dependent => :delete}, :null => false
  end
</pre>

Here's another example using a different column name and the dependent option
<pre>
  create_table :comments do |t|
    t.integer :article_id, :null => false
    t.foreign_key :post, :column => :article_id, :dependent => :nullify
  end
</pre>

To specify a reference with a foreign key constraint using Rails convention:
<pre>
  create_table :comments do |t|
    t.references :post, :foreign_key => true, :null => false
  end
</pre>

Read the specs for more example usage.

h2. schema.rb

All of the constrants are updated in schema.rb when you either:
<pre>
  rake db:migrate
  rake db:schema:dump
</pre>
This allows you to see the state of your migratons and
take advantage of using <pre>rake db:schema:load</pre>

h2. Installation

h3. Rails 3

- Have not tested any of these changes against Rails 3.
- See the matthuhiggins-foreigner or dwilkie-foreigner if you want a Foreigner that plays nice with Rails 3. 

h3. Rails 2.3.5

Add the following to environment.rb:
<pre>config.gem "sparkfly-foreigner", :lib => "foreigner"</pre>
Then run:
<pre>sudo rake gems:install</pre>

h2. Disabling Foreign Keys

To disable foreign keys you, invoke:

<pre>Foreigner.disable</pre>

You can drop this into config/initializers

NOTE: This is different from the default behavior of dwilkie-foreigner. We're assuming you are installing this 
because you need referential integrity for your PostgreSQL-backed Rails application. Besides that, any testing
should be done against PostgreSQL, not against SQLite3 in-memory.

h2. Testing

You will need rspec and possibly rspec-rails. Run "rake spec" to run all the spec. Make sure
that all of the PostgreSQL and MySQL databases defined in spec/spec_helper.rb are created
before you run those tests.

h2. Copyrights

Copyright (c) 2010 Ho-Sheng Hsiao, released under the MIT license

Modified from code written by David Wilkie and Matt Higgins. See http://github.com/sparkfly/foreigner for details on
what got changed from what.

